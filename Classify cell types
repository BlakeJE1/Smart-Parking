grid = [[["RL"], ["RL"], ["W"], ["E"], ["W"], ["RU"], ["RR"], ["RR"]],
        [["RD"], ["W"], ["RL"], ["RU"], ["W"], ["RU"], ["W"], ["RD"]], 
        [["RD"], ["W"], ["W"], ["RU"], ["W"], ["RU"], ["W"], ["RD"]], 
        [["RD"], ["W"], ["P"], ["RL"], ["RU"], ["RR"], ["W"], ["RD"]], 
        [["RD"], ["RR"], ["W"], ["W"], ["RU"], ["W"], ["W"], ["RD"]], 
        [["W"], ["RD"], ["RR"], ["RR"], ["RR"], ["RR"], ["W"], ["P"]]]

j_max = len(grid[0])
i_max = len(grid)
cells = []

class cell():
    def __init__(self, i, j):
        self.i = i
        self.j = j
        self.parent = None
        self.g = 0
        self.h = 0
        self.f = 0
        self.up = False
        self.left = False
        self.right = False
        self.down = False

def classify_cells():
    walls = []
    parkingSpaces = []
    
    for j in range(j_max):
        for i in range(i_max):
            currentSquare = grid[i][j]
            currentCell = cell(i,j)
            if "W" in currentSquare:
                walls.append([i,j])
            if "E" in currentSquare:
                shopEntrance = [i,j]
            if "RU" in currentSquare:
                currentCell.up = True
            if "RL" in currentSquare:
                currentCell.left = True
            if "RR" in currentSquare:
                currentCell.right = True
            if "RD" in currentSquare:
                currentCell.down = True
            if "P" in currentSquare:
                parkingSpaces.append([i,j])
            grid[i][j].append(currentCell)
    return walls, shopEntrance, parkingSpaces
                
cellTypes = classify_cells()
walls = cellTypes[0]
shopEntrance = cellTypes[1]
parkingSpaces = cellTypes[2]

cellTypes
